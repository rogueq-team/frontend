import React, { useState } from 'react';
import { useAuth } from '../context/AuthContext';
import './OrdersList.css';

function OrdersList() {
  const { user } = useAuth();
  const [activeFilter, setActiveFilter] = useState('all');

  // Mock –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–æ–≤ (—Ä–∞–∑–Ω—ã–µ –¥–ª—è —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π –∏ –∫–æ–Ω—Ç–µ–Ω—Ç–º–µ–π–∫–µ—Ä–æ–≤)
  const mockOrders = {
    advertiser: [
      {
        id: 1,
        title: '–†–µ–∫–ª–∞–º–Ω–∞—è –∫–∞–º–ø–∞–Ω–∏—è "–ù–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç"',
        contentMaker: '–ò–≤–∞–Ω –ë–ª–æ–≥–µ—Ä',
        platform: 'YouTube',
        budget: 25000,
        status: 'active',
        deadline: '2024-02-15',
        progress: 75,
        type: 'video'
      },
      {
        id: 2,
        title: '–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –≤ Instagram',
        contentMaker: '–ú–∞—Ä–∏—è –ö—Ä–µ–∞—Ç–∏–≤',
        platform: 'Instagram',
        budget: 15000,
        status: 'pending',
        deadline: '2024-02-20',
        progress: 0,
        type: 'post'
      },
      {
        id: 3,
        title: '–û–±–∑–æ—Ä –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ Telegram',
        contentMaker: '–¢–µ—Ö–Ω–æ–ë–ª–æ–≥',
        platform: 'Telegram',
        budget: 10000,
        status: 'active',
        deadline: '2024-02-10',
        progress: 100,
        type: 'article'
      }
    ],
    contentmaker: [
      {
        id: 1,
        title: '–°–æ–∑–¥–∞–Ω–∏–µ –æ–±–∑–æ—Ä–∞ –¥–ª—è TechCompany',
        advertiser: '–û–û–û "–¢–µ—Ö–Ω–æ–ö–æ–º–ø–∞–Ω–∏—è"',
        platform: 'YouTube',
        budget: 30000,
        status: 'active',
        deadline: '2024-02-12',
        progress: 60,
        type: 'video'
      },
      {
        id: 2,
        title: '–†–µ–∫–ª–∞–º–Ω—ã–π –ø–æ—Å—Ç –≤ Instagram',
        advertiser: '–ë—Ä–µ–Ω–¥ –æ–¥–µ–∂–¥—ã "Style"',
        platform: 'Instagram',
        budget: 20000,
        status: 'review',
        deadline: '2024-02-18',
        progress: 100,
        type: 'post'
      },
      {
        id: 3,
        title: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ Stories',
        advertiser: '–ö–æ—Ñ–µ–π–Ω—è "Aroma"',
        platform: 'Instagram',
        budget: 8000,
        status: 'active',
        deadline: '2024-02-08',
        progress: 25,
        type: 'story'
      }
    ]
  };

  const orders = mockOrders[user?.userType] || [];

  const filteredOrders = activeFilter === 'all' 
    ? orders 
    : orders.filter(order => order.status === activeFilter);

  const getStatusInfo = (status) => {
    const statuses = {
      active: { label: '–ê–∫—Ç–∏–≤–µ–Ω', color: '#28a745', icon: 'üü¢' },
      pending: { label: '–û–∂–∏–¥–∞–Ω–∏–µ', color: '#ffc107', icon: 'üü°' },
      review: { label: '–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ', color: '#17a2b8', icon: 'üîµ' },
      completed: { label: '–ó–∞–≤–µ—Ä—à–µ–Ω', color: '#6c757d', icon: '‚ö´' }
    };
    return statuses[status] || statuses.pending;
  };

  const getTypeIcon = (type) => {
    const icons = {
      video: 'üé¨',
      post: 'üìù',
      story: 'üì±',
      article: 'üìÑ',
      banner: 'üñºÔ∏è'
    };
    return icons[type] || 'üìã';
  };

  const handleAction = (orderId, action) => {
    console.log(`–î–µ–π—Å—Ç–≤–∏–µ: ${action} –¥–ª—è –∑–∞–∫–∞–∑–∞ ${orderId}`);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –∑–∞–∫–∞–∑–∞–º–∏
  };

  return (
    <div className="orders-page">
      <div className="orders-header">
        <h1>–ú–æ–∏ –∑–∞–∫–∞–∑—ã</h1>
        <div className="orders-filters">
          <button 
            className={`filter-btn ${activeFilter === 'all' ? 'active' : ''}`}
            onClick={() => setActiveFilter('all')}
          >
            –í—Å–µ
          </button>
          <button 
            className={`filter-btn ${activeFilter === 'active' ? 'active' : ''}`}
            onClick={() => setActiveFilter('active')}
          >
            –ê–∫—Ç–∏–≤–Ω—ã–µ
          </button>
          <button 
            className={`filter-btn ${activeFilter === 'pending' ? 'active' : ''}`}
            onClick={() => setActiveFilter('pending')}
          >
            –û–∂–∏–¥–∞–Ω–∏–µ
          </button>
          <button 
            className={`filter-btn ${activeFilter === 'review' ? 'active' : ''}`}
            onClick={() => setActiveFilter('review')}
          >
            –ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ
          </button>
        </div>
      </div>

      <div className="orders-stats">
        <div className="stat-card">
          <div className="stat-number">{orders.length}</div>
          <div className="stat-label">–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤</div>
        </div>
        <div className="stat-card">
          <div className="stat-number">
            {orders.filter(o => o.status === 'active').length}
          </div>
          <div className="stat-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö</div>
        </div>
        <div className="stat-card">
          <div className="stat-number">
            {orders.filter(o => o.status === 'completed').length}
          </div>
          <div className="stat-label">–ó–∞–≤–µ—Ä—à–µ–Ω–æ</div>
        </div>
        <div className="stat-card">
          <div className="stat-number">
            {orders.reduce((sum, order) => sum + order.budget, 0).toLocaleString()} ‚ÇΩ
          </div>
          <div className="stat-label">–û–±—â–∏–π –±—é–¥–∂–µ—Ç</div>
        </div>
      </div>

      <div className="orders-list">
        {filteredOrders.length === 0 ? (
          <div className="no-orders">
            <div className="no-orders-icon">üìã</div>
            <h3>–ó–∞–∫–∞–∑–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>
            <p>–ó–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è –≤–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã –∏ –ø—Ä–æ–µ–∫—Ç—ã</p>
          </div>
        ) : (
          filteredOrders.map(order => (
            <div key={order.id} className="order-card">
              <div className="order-header">
                <div className="order-type">
                  <span className="type-icon">{getTypeIcon(order.type)}</span>
                  <span className="order-title">{order.title}</span>
                </div>
                <div className="order-status">
                  <span 
                    className="status-badge"
                    style={{ backgroundColor: getStatusInfo(order.status).color }}
                  >
                    {getStatusInfo(order.status).icon} {getStatusInfo(order.status).label}
                  </span>
                </div>
              </div>

              <div className="order-details">
                <div className="detail-item">
                  <span className="detail-label">
                    {user?.userType === 'advertiser' ? '–ö–æ–Ω—Ç–µ–Ω—Ç–º–µ–π–∫–µ—Ä:' : '–†–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—å:'}
                  </span>
                  <span className="detail-value">
                    {user?.userType === 'advertiser' ? order.contentMaker : order.advertiser}
                  </span>
                </div>
                <div className="detail-item">
                  <span className="detail-label">–ü–ª–æ—â–∞–¥–∫–∞:</span>
                  <span className="detail-value">{order.platform}</span>
                </div>
                <div className="detail-item">
                  <span className="detail-label">–ë—é–¥–∂–µ—Ç:</span>
                  <span className="detail-value budget">{order.budget.toLocaleString()} ‚ÇΩ</span>
                </div>
                <div className="detail-item">
                  <span className="detail-label">–î–µ–¥–ª–∞–π–Ω:</span>
                  <span className="detail-value deadline">{order.deadline}</span>
                </div>
              </div>

              {order.progress > 0 && (
                <div className="progress-section">
                  <div className="progress-header">
                    <span>–ü—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</span>
                    <span className="progress-percent">{order.progress}%</span>
                  </div>
                  <div className="progress-bar">
                    <div 
                      className="progress-fill"
                      style={{ width: `${order.progress}%` }}
                    ></div>
                  </div>
                </div>
              )}

              <div className="order-actions">
                {order.status === 'active' && (
                  <>
                    <button 
                      className="action-btn primary"
                      onClick={() => handleAction(order.id, 'view')}
                    >
                      üëÅÔ∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å
                    </button>
                    <button 
                      className="action-btn secondary"
                      onClick={() => handleAction(order.id, 'message')}
                    >
                      üí¨ –ù–∞–ø–∏—Å–∞—Ç—å
                    </button>
                  </>
                )}
                {order.status === 'pending' && (
                  <button 
                    className="action-btn primary"
                    onClick={() => handleAction(order.id, 'accept')}
                  >
                    ‚úÖ –ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑
                  </button>
                )}
                {order.status === 'review' && (
                  <button 
                    className="action-btn primary"
                    onClick={() => handleAction(order.id, 'review')}
                  >
                    üìã –ü—Ä–æ–≤–µ—Ä–∏—Ç—å
                  </button>
                )}
                <button 
                  className="action-btn outline"
                  onClick={() => handleAction(order.id, 'details')}
                >
                  ‚ÑπÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                </button>
              </div>
            </div>
          ))
        )}
      </div>
    </div>
  );
}

export default OrdersList;