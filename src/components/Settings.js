import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { useForm } from 'react-hook-form';
import { useAuth } from '../context/AuthContext';
import AvatarUpload from './AvatarUpload';
import ConfirmModal from './ConfirmModal'; // –°–æ–∑–¥–∞–¥–∏–º —ç—Ç–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
import './Settings.css';

function Settings() {
  const { user } = useAuth();
  const navigate = useNavigate();
  const [activeTab, setActiveTab] = useState('profile');
  const [showConfirmModal, setShowConfirmModal] = useState(false);
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º react-hook-form
  const { register, watch, setValue, handleSubmit, formState: { isDirty }, reset } = useForm({
    defaultValues: {
      name: user?.name || '',
      email: user?.email || '',
      phone: '',
      website: '',
      description: '',
      avatar: user?.avatar || '',
      socialLinks: {
        youtube: '',
        instagram: '',
        telegram: '',
        tiktok: '',
        vk: ''
      }
    }
  });

  // –°–ª–µ–¥–∏–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ —Ñ–æ—Ä–º—ã
  const formData = watch();

  // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–≤–µ—Ä—Ö
  useEffect(() => {
    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });
  }, [activeTab]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–≤–∞—Ç–∞—Ä–∞
  const handleAvatarChange = (newAvatar) => {
    setValue('avatar', newAvatar, { shouldDirty: true });
  };

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
  const onSubmit = (data) => {
    console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', data);
    reset(data); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º dirty —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  };

  // –ù–∞–≤–∏–≥–∞—Ü–∏—è —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∏–∑–º–µ–Ω–µ–Ω–∏–π
  const handleBackToDashboard = () => {
    if (isDirty) {
      setShowConfirmModal(true);
    } else {
      navigate('/dashboard');
    }
  };

  const confirmLeave = () => {
    setShowConfirmModal(false);
    navigate('/dashboard');
  };

  const cancelLeave = () => {
    setShowConfirmModal(false);
  };

  return (
    <div className="settings-page">
      <div className="settings-container">
        <div className="settings-header">
          <button
            onClick={handleBackToDashboard}
            className="back-btn"
            title="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"
          >
            ‚Üê –ù–∞–∑–∞–¥
          </button>
          <h1>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</h1>
        </div>

        <div className="settings-tabs">
          <button
            className={`tab-btn ${activeTab === 'profile' ? 'active' : ''}`}
            onClick={() => setActiveTab('profile')}
          >
            –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
          </button>
          {user?.userType === 'contentmaker' && (
            <button
              className={`tab-btn ${activeTab === 'social' ? 'active' : ''}`}
              onClick={() => setActiveTab('social')}
            >
              –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏
            </button>
          )}
          <button
            className={`tab-btn ${activeTab === 'security' ? 'active' : ''}`}
            onClick={() => setActiveTab('security')}
          >
            –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
          </button>
        </div>

        <form onSubmit={handleSubmit(onSubmit)} className="settings-form">
          {/* –í–∫–ª–∞–¥–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö */}
          {activeTab === 'profile' && (
            <div className="tab-content">
              <h2>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>

              <div className="avatar-section">
                <h3>–ê–≤–∞—Ç–∞—Ä –ø—Ä–æ—Ñ–∏–ª—è</h3>
                <AvatarUpload
                  currentAvatar={formData.avatar}
                  onAvatarChange={handleAvatarChange}
                />
              </div>

              <div className="form-group">
                <label htmlFor="name">
                  {user?.userType === 'advertiser' ? '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏' : '–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è'}
                </label>
                <input
                  type="text"
                  id="name"
                  placeholder={user?.userType === 'advertiser' ? '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏' : '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è'}
                  {...register('name')}
                />
              </div>

              <div className="form-group">
                <label htmlFor="email">Email</label>
                <input
                  type="email"
                  id="email"
                  placeholder="your@email.com"
                  {...register('email')}
                />
              </div>

              <div className="form-group">
                <label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                <input
                  type="tel"
                  id="phone"
                  placeholder="+7 (999) 999-99-99"
                  {...register('phone')}
                />
              </div>

              {user?.userType === 'advertiser' && (
                <div className="form-group">
                  <label htmlFor="website">–í–µ–±-—Å–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏</label>
                  <input
                    type="url"
                    id="website"
                    placeholder="https://example.com"
                    {...register('website')}
                  />
                </div>
              )}

              <div className="form-group">
                <label htmlFor="description">
                  {user?.userType === 'advertiser' ? '–û –∫–æ–º–ø–∞–Ω–∏–∏' : '–û —Å–µ–±–µ'}
                </label>
                <textarea
                  id="description"
                  placeholder={user?.userType === 'advertiser' ? '–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏...' : '–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ...'}
                  rows="4"
                  {...register('description')}
                />
              </div>
            </div>
          )}

          {/* –í–∫–ª–∞–¥–∫–∞ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π */}
          {activeTab === 'social' && user?.userType === 'contentmaker' && (
            <div className="tab-content">
              <h2>–ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π</h2>
              <p className="section-description">
                –ü—Ä–∏–≤—è–∂–∏—Ç–µ –≤–∞—à–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤—É
              </p>

              <div className="social-grid">
                {['youtube', 'instagram', 'telegram', 'tiktok', 'vk'].map((platform) => (
                  <div key={platform} className="social-input-group">
                    <label htmlFor={`social_${platform}`}>
                      <span className="social-icon">
                        {platform === 'youtube' && 'üì∫'}
                        {platform === 'instagram' && 'üì∑'}
                        {platform === 'telegram' && '‚úàÔ∏è'}
                        {platform === 'tiktok' && 'üéµ'}
                        {platform === 'vk' && 'üë•'}
                      </span>
                      {platform.charAt(0).toUpperCase() + platform.slice(1)}
                    </label>
                    <input
                      type="url"
                      id={`social_${platform}`}
                      placeholder={`https://${platform}.com/yourprofile`}
                      {...register(`socialLinks.${platform}`)}
                    />
                  </div>
                ))}
              </div>
            </div>
          )}

          {/* –í–∫–ª–∞–¥–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ */}
          {activeTab === 'security' && (
            <div className="tab-content">
              <h2>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h2>
              <div className="form-group">
                <label htmlFor="currentPassword">–¢–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å</label>
                <input
                  type="password"
                  id="currentPassword"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å"
                />
              </div>
              <div className="form-group">
                <label htmlFor="newPassword">–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å</label>
                <input
                  type="password"
                  id="newPassword"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å"
                />
              </div>
              <div className="form-group">
                <label htmlFor="confirmPassword">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å</label>
                <input
                  type="password"
                  id="confirmPassword"
                  placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å"
                />
              </div>
            </div>
          )}

          <div className="form-actions">
            <button
              type="submit"
              className={`save-btn ${isDirty ? 'active' : 'inactive'}`}
              disabled={!isDirty}
            >
              {isDirty ? 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è' : '‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ'}
            </button>

            <div className="right-actions">
              {isDirty && (
                <button
                  type="button"
                  className="cancel-btn"
                  onClick={() => reset()}
                >
                  üîÑ –°–±—Ä–æ—Å–∏—Ç—å
                </button>
              )}
              <button
                type="button"
                className="back-dashboard-btn"
                onClick={handleBackToDashboard}
              >
                ‚Üê –í –∫–∞–±–∏–Ω–µ—Ç
              </button>
            </div>
          </div>
        </form>
      </div>

      {/* –ö–∞—Å—Ç–æ–º–Ω—ã–π –º–æ–¥–∞–ª –≤–º–µ—Å—Ç–æ confirm */}
      <button disabled={!isDirty}>
        {isDirty ? 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è' : '‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ'}
      </button>
    </div>
  );
}

export default Settings;