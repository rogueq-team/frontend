import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../context/AuthContext';
import AvatarUpload from './AvatarUpload';
import './Settings.css';

function Settings() {
  const { user } = useAuth();
  const navigate = useNavigate();
  const [activeTab, setActiveTab] = useState('profile');
  const [hasChanges, setHasChanges] = useState(false);
  const [isSaved, setIsSaved] = useState(false);

  useEffect(() => {
    window.scrollTo({
      behavior:
        "smooth",
      left: 0,
      top: 0
    });
  }, []);
  useEffect(() => {
    window.scrollTo({
      behavior:
        "smooth",
      left: 0,
      top: 0
    });
  }, [activeTab]);
  // –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const initialData = {
    name: user?.name || '',
    email: user?.email || '',
    phone: '',
    company: user?.userType === 'advertiser' ? user?.name : '',
    website: '',
    description: '',
    avatar: user?.avatar || '', // –î–æ–±–∞–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä
    socialLinks: {
      youtube: '',
      instagram: '',
      telegram: '',
      tiktok: '',
      vk: ''
    }
  };

  // —Ç–∏–º—É—Ä—á–∏–∫: react-hook-form
  const [formData, setFormData] = useState(initialData);
  const [initialFormData, setInitialFormData] = useState(initialData);

  // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ —Å –∏—Å—Ö–æ–¥–Ω—ã–º–∏
  useEffect(() => {
    const hasFormChanged = JSON.stringify(formData) !== JSON.stringify(initialFormData);
    setHasChanges(hasFormChanged);
    if (hasFormChanged) {
      setIsSaved(false);
    }
  }, [formData, initialFormData]);

  const handleChange = (e) => {
    const { name, value } = e.target;

    // —Ç–∏–º—É—Ä—á–∏–∫: –Ω–µ–Ω–∞–¥—ë–∂–Ω–æ
    if (name.startsWith('social_')) {
      const socialKey = name.replace('social_', '');
      setFormData(prev => ({
        ...prev,
        socialLinks: {
          ...prev.socialLinks,
          [socialKey]: value
        }
      }));
    } else {
      setFormData(prev => ({
        ...prev,
        [name]: value
      }));
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞
  const handleAvatarChange = (newAvatar) => {
    setFormData(prev => ({
      ...prev,
      avatar: newAvatar
    }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', formData);

    // –ò–º–∏—Ç–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    setInitialFormData(formData);
    setHasChanges(false);
    setIsSaved(true);

    // –£–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => setIsSaved(false), 3000);

    alert('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!');
  };

  const handleCancel = () => {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    setFormData(initialFormData);
    setHasChanges(false);
    setIsSaved(false);
  };

  const handleBackToDashboard = () => {
    if (hasChanges) {
      // —Ç–∏–º—É—Ä—á–∏–∫: –±–µ—Å—è—á–∞—è —Ñ–∏–≥–Ω—è
      const confirmLeave = window.confirm('–£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?');
      if (confirmLeave) {
        navigate('/dashboard');
      }
    } else {
      navigate('/dashboard');
    }
  };

  return (
    <div className="settings-page">
      <div className="settings-container">
        <div className="settings-header">
          <button
            onClick={handleBackToDashboard}
            className="back-btn"
            title="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"
          >
            ‚Üê –ù–∞–∑–∞–¥
          </button>
          <h1>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</h1>
        </div>

        {isSaved && (
          <div className="success-message">
            ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!
          </div>
        )}

        <div className="settings-tabs">
          <button
            className={`tab-btn ${activeTab === 'profile' ? 'active' : ''}`}
            onClick={() => setActiveTab('profile')}
          >
            –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
          </button>
          {user?.userType === 'contentmaker' && (
            <button
              className={`tab-btn ${activeTab === 'social' ? 'active' : ''}`}
              onClick={() => setActiveTab('social')}
            >
              –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏
            </button>
          )}
          <button
            className={`tab-btn ${activeTab === 'security' ? 'active' : ''}`}
            onClick={() => setActiveTab('security')}
          >
            –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
          </button>
        </div>

        <form onSubmit={handleSubmit} className="settings-form">
          {/* –í–∫–ª–∞–¥–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö */}
          {activeTab === 'profile' && (
            <div className="tab-content">
              <h2>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>

              {/* –ë–ª–æ–∫ –∞–≤–∞—Ç–∞—Ä–∞ */}
              <div className="avatar-section">
                <h3>–ê–≤–∞—Ç–∞—Ä –ø—Ä–æ—Ñ–∏–ª—è</h3>
                <AvatarUpload
                  currentAvatar={formData.avatar}
                  onAvatarChange={handleAvatarChange}
                />
              </div>

              <div className="form-group">
                <label htmlFor="name">
                  {user?.userType === 'advertiser' ? '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏' : '–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è'}
                </label>
                <input
                  type="text"
                  id="name"
                  name="name"
                  value={formData.name}
                  onChange={handleChange}
                  placeholder={user?.userType === 'advertiser' ? '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏' : '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è'}
                />
              </div>

              <div className="form-group">
                <label htmlFor="email">Email</label>
                <input
                  type="email"
                  id="email"
                  name="email"
                  value={formData.email}
                  onChange={handleChange}
                  placeholder="your@email.com"
                />
              </div>

              <div className="form-group">
                <label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                <input
                  type="tel"
                  id="phone"
                  name="phone"
                  value={formData.phone}
                  onChange={handleChange}
                  placeholder="+7 (999) 999-99-99"
                />
              </div>

              {user?.userType === 'advertiser' && (
                <div className="form-group">
                  <label htmlFor="website">–í–µ–±-—Å–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏</label>
                  <input
                    type="url"
                    id="website"
                    name="website"
                    value={formData.website}
                    onChange={handleChange}
                    placeholder="https://example.com"
                  />
                </div>
              )}

              <div className="form-group">
                <label htmlFor="description">
                  {user?.userType === 'advertiser' ? '–û –∫–æ–º–ø–∞–Ω–∏–∏' : '–û —Å–µ–±–µ'}
                </label>
                <textarea
                  id="description"
                  name="description"
                  value={formData.description}
                  onChange={handleChange}
                  placeholder={user?.userType === 'advertiser' ? '–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏...' : '–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ...'}
                  rows="4"
                />
              </div>
            </div>
          )}

          {/* –í–∫–ª–∞–¥–∫–∞ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π (—Ç–æ–ª—å–∫–æ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–º–µ–π–∫–µ—Ä–æ–≤) */}
          {activeTab === 'social' && user?.userType === 'contentmaker' && (
            <div className="tab-content">
              <h2>–ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π</h2>
              <p className="section-description">
                –ü—Ä–∏–≤—è–∂–∏—Ç–µ –≤–∞—à–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤—É
              </p>

              <div className="social-grid">
                <div className="social-input-group">
                  <label htmlFor="social_youtube">
                    <span className="social-icon">üì∫</span>
                    YouTube
                  </label>
                  <input
                    type="url"
                    id="social_youtube"
                    name="social_youtube"
                    value={formData.socialLinks.youtube}
                    onChange={handleChange}
                    placeholder="https://youtube.com/c/yourchannel"
                  />
                </div>

                <div className="social-input-group">
                  <label htmlFor="social_instagram">
                    <span className="social-icon">üì∑</span>
                    Instagram
                  </label>
                  <input
                    type="url"
                    id="social_instagram"
                    name="social_instagram"
                    value={formData.socialLinks.instagram}
                    onChange={handleChange}
                    placeholder="https://instagram.com/yourprofile"
                  />
                </div>

                <div className="social-input-group">
                  <label htmlFor="social_telegram">
                    <span className="social-icon">‚úàÔ∏è</span>
                    Telegram
                  </label>
                  <input
                    type="url"
                    id="social_telegram"
                    name="social_telegram"
                    value={formData.socialLinks.telegram}
                    onChange={handleChange}
                    placeholder="https://t.me/yourchannel"
                  />
                </div>

                <div className="social-input-group">
                  <label htmlFor="social_tiktok">
                    <span className="social-icon">üéµ</span>
                    TikTok
                  </label>
                  <input
                    type="url"
                    id="social_tiktok"
                    name="social_tiktok"
                    value={formData.socialLinks.tiktok}
                    onChange={handleChange}
                    placeholder="https://tiktok.com/@yourprofile"
                  />
                </div>

                <div className="social-input-group">
                  <label htmlFor="social_vk">
                    <span className="social-icon">üë•</span>
                    VK
                  </label>
                  <input
                    type="url"
                    id="social_vk"
                    name="social_vk"
                    value={formData.socialLinks.vk}
                    onChange={handleChange}
                    placeholder="https://vk.com/yourprofile"
                  />
                </div>
              </div>
            </div>
          )}

          {/* –í–∫–ª–∞–¥–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ */}
          {activeTab === 'security' && (
            <div className="tab-content">
              <h2>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h2>

              <div className="form-group">
                <label htmlFor="currentPassword">–¢–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å</label>
                <input
                  type="password"
                  id="currentPassword"
                  name="currentPassword"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å"
                />
              </div>

              <div className="form-group">
                <label htmlFor="newPassword">–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å</label>
                <input
                  type="password"
                  id="newPassword"
                  name="newPassword"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å"
                />
              </div>

              <div className="form-group">
                <label htmlFor="confirmPassword">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å</label>
                <input
                  type="password"
                  id="confirmPassword"
                  name="confirmPassword"
                  placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å"
                />
              </div>

              <div className="security-actions">
                <button type="button" className="secondary-btn">
                  –°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å
                </button>
              </div>
            </div>
          )}

          <div className="form-actions">
            <button
              type="submit"
              className={`save-btn ${hasChanges ? 'active' : 'inactive'}`}
              disabled={!hasChanges}
            >
              {hasChanges ? 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è' : '‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ'}
            </button>

            <div className="right-actions">
              {hasChanges && (
                <button
                  type="button"
                  className="cancel-btn"
                  onClick={handleCancel}
                >
                  üîÑ –°–±—Ä–æ—Å–∏—Ç—å
                </button>
              )}
              <button
                type="button"
                className="back-dashboard-btn"
                onClick={handleBackToDashboard}
              >
                ‚Üê –í –∫–∞–±–∏–Ω–µ—Ç
              </button>
            </div>
          </div>
        </form>
      </div>
    </div>
  );
}

export default Settings;
